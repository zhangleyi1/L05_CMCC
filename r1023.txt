Index: frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/NotificationPanelView.java
===================================================================
--- frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/NotificationPanelView.java	(revision 1022)
+++ frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/NotificationPanelView.java	(revision 1023)
@@ -67,6 +67,10 @@
 import com.android.systemui.statusbar.stack.StackStateAnimator;
 
 import java.util.List;
+//add by dongdongli 20170831 start {
+import android.os.Handler;
+import android.os.Message;
+//add end }
 
 public class NotificationPanelView extends PanelView implements
         ExpandableView.OnHeightChangedListener,
@@ -198,6 +202,26 @@
     private boolean mLaunchingAffordance;
     private FalsingManager mFalsingManager;
     private String mLastCameraLaunchSource = KeyguardBottomAreaView.CAMERA_LAUNCH_SOURCE_AFFORDANCE;
+	//add by dongdongli 20170831 start {
+	private static final int MESSAGE_HIDE_LOCKICON = 0x0001;	
+	
+	// handle the message of hiding lockicon 
+	private Handler mHandler = new Handler(){
+        @Override
+        public void handleMessage(Message msg) {
+            if (msg.what == MESSAGE_HIDE_LOCKICON) {
+				if(mKeyguardBottomArea.getLockIcon()!= null){
+					boolean visible = mKeyguardBottomArea.getLockIcon().getVisibility() == View.VISIBLE;
+					if(visible) {
+						mKeyguardBottomArea.getLockIcon().setVisibility(View.GONE);
+					}
+				}
+            }
+            super.handleMessage(msg);
+        }
+    };
+	private TimeCountThread mTimeCountThread = new TimeCountThread();
+	//add end }
 
     private Runnable mHeadsUpExistenceChangedRunnable = new Runnable() {
         @Override
@@ -734,6 +758,16 @@
 
     @Override
     public boolean onTouchEvent(MotionEvent event) {
+		//add by dongdongli 20170831 start {
+		//show lockicon when user touch the panel 
+		mTimeCountThread.reset();
+		if (event.getAction() == MotionEvent.ACTION_DOWN) {
+			boolean isVisible = mKeyguardBottomArea.getLockIcon().getVisibility() == View.VISIBLE;
+            if (!isVisible) {
+                mKeyguardBottomArea.getLockIcon().setVisibility(View.VISIBLE);
+            }
+        }
+		//add end }
         if (mBlockTouches || mQsContainer.isCustomizing()) {
             return false;
         }
@@ -1096,6 +1130,13 @@
         @Override
         public void run() {
             mKeyguardBottomArea.setVisibility(View.GONE);
+			//add by dongdongli 20170831 start {
+			try {
+				mTimeCountThread.wait();
+			} catch (Exception e) {
+            
+			}
+			//add end }
         }
     };
 
@@ -1119,6 +1160,13 @@
         } else {
             mKeyguardBottomArea.setVisibility(View.GONE);
             mKeyguardBottomArea.setAlpha(1f);
+			//add by dongdongli 20170831 start {
+			try {
+				mTimeCountThread.wait();
+			} catch (Exception e) {
+            
+			}
+			//add end }
         }
     }
 
@@ -2068,6 +2116,13 @@
         if (mDozing) {
             mKeyguardStatusBar.setVisibility(View.INVISIBLE);
             mKeyguardBottomArea.setVisibility(View.INVISIBLE);
+			//add by dongdongli 20170831 start {
+			try {
+				mTimeCountThread.wait();
+			} catch (Exception e) {
+            
+			}
+			//add end }
         } else {
             mKeyguardBottomArea.setVisibility(View.VISIBLE);
             mKeyguardStatusBar.setVisibility(View.VISIBLE);
@@ -2115,6 +2170,16 @@
 
     public void onScreenTurningOn() {
         mKeyguardStatusView.refreshTime();
+		//add by dongdongli 20170901 start {
+		//show the lockicon when screen turn on
+		if(mKeyguardBottomArea.getLockIcon()!= null){
+			boolean visible = mKeyguardBottomArea.getLockIcon().getVisibility() == View.VISIBLE;
+				if(!visible) {
+				mKeyguardBottomArea.getLockIcon().setVisibility(View.VISIBLE);
+			}
+		}
+		mTimeCountThread.start();
+		//add end }
     }
 
     @Override
@@ -2361,4 +2426,38 @@
     public void setGroupManager(NotificationGroupManager groupManager) {
         mGroupManager = groupManager;
     }
+	// add by dongdongli 20170831 start {
+	// the time count thread (2s)
+	private class TimeCountThread extends Thread {
+        private final long maxVisibleTime = 2000;
+        private long startVisibleTime;
+
+        public TimeCountThread(){
+            setDaemon(true);
+        }
+
+        public synchronized void reset() {
+            startVisibleTime = System.currentTimeMillis();
+        }
+
+        @Override
+        public void run() {
+            startVisibleTime = System.currentTimeMillis();
+            while(true) {
+				// check if the time is 2s already
+                if (startVisibleTime + maxVisibleTime < System.currentTimeMillis()) {
+                    mHandler.sendEmptyMessage(MESSAGE_HIDE_LOCKICON);
+                    startVisibleTime = System.currentTimeMillis();
+                }
+
+                try {
+                    Thread.sleep(1000);
+                } catch (Exception e) {
+
+                }
+            }
+        }
+    }
+	
+	// add end }
 }
Index: frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/LockIcon.java
===================================================================
--- frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/LockIcon.java	(revision 1022)
+++ frameworks/base/packages/SystemUI/src/com/android/systemui/statusbar/phone/LockIcon.java	(revision 1023)
@@ -141,7 +141,11 @@
             }
             if (iconRes == -1) {
                 iconRes = getIconForState(state, mScreenOn, mDeviceInteractive);
-                isAnim = false;
+                // Modify by dongdongli 20170901 start {
+				// we need to show the animation of the lockicon
+				//isAnim = false;
+				isAnim = true;
+				// Modify end }
             }
             Drawable icon = mContext.getDrawable(iconRes);
             final AnimatedVectorDrawable animation = icon instanceof AnimatedVectorDrawable
@@ -151,6 +155,22 @@
                     R.dimen.keyguard_affordance_icon_height);
             int iconWidth = getResources().getDimensionPixelSize(
                     R.dimen.keyguard_affordance_icon_width);
+            // add by dongdongli 20180831 start {
+			// re-difine the width/height of the LockIcon
+			if (state == STATE_LOCKED || state == STATE_LOCK_OPEN) {
+				iconHeight = getResources().getDimensionPixelSize(
+                    R.dimen.keyguard_affordance_customize_icon_height);
+				iconWidth = getResources().getDimensionPixelSize(
+                    R.dimen.keyguard_affordance_customize_icon_width);
+			} else {
+				iconHeight = getResources().getDimensionPixelSize(
+                    R.dimen.keyguard_affordance_icon_height);
+				iconWidth = getResources().getDimensionPixelSize(
+                    R.dimen.keyguard_affordance_icon_width);
+			}
+			// add end }
+			
+			
             if (!anyFingerprintIcon && (icon.getIntrinsicHeight() != iconHeight
                     || icon.getIntrinsicWidth() != iconWidth)) {
                 icon = new IntrinsicSizeDrawable(icon, iconWidth, iconHeight);
@@ -217,10 +237,16 @@
     private int getIconForState(int state, boolean screenOn, boolean deviceInteractive) {
         switch (state) {
             case STATE_LOCKED:
-                return R.drawable.ic_lock_24dp;
+				//modify by dongdongli 20170831 start { 
+                //return R.drawable.ic_lock_24dp;
+				return R.drawable.unlock_all_animation;
+				//modify end }
             case STATE_LOCK_OPEN:
-                return R.drawable.ic_lock_open_24dp;
-            case STATE_FACE_UNLOCK:
+				//modify by dongdongli 20170831 start {
+                //return R.drawable.ic_lock_open_24dp;
+				return R.drawable.unlock_all_animation;
+				// modify end }
+			case STATE_FACE_UNLOCK:
                 return com.android.internal.R.drawable.ic_account_circle;
             case STATE_FINGERPRINT:
                 // If screen is off and device asleep, use the draw on animation so the first frame
Index: frameworks/base/packages/SystemUI/res/anim/arrow_animator_1.xml
===================================================================
--- frameworks/base/packages/SystemUI/res/anim/arrow_animator_1.xml	(revision 0)
+++ frameworks/base/packages/SystemUI/res/anim/arrow_animator_1.xml	(revision 1023)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<objectAnimator
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="2000"
+    android:interpolator="@android:interpolator/cycle"
+    android:propertyName="strokeColor"
+    android:repeatCount="infinite"
+    android:repeatMode="reverse"
+    android:valueFrom="#CCFFFFFF"
+    android:valueTo="#33FFFFFF"
+    android:valueType="colorType"
+    />
+
Index: frameworks/base/packages/SystemUI/res/anim/arrow_animator_2.xml
===================================================================
--- frameworks/base/packages/SystemUI/res/anim/arrow_animator_2.xml	(revision 0)
+++ frameworks/base/packages/SystemUI/res/anim/arrow_animator_2.xml	(revision 1023)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<objectAnimator
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:duration="2000"
+    android:interpolator="@android:interpolator/cycle"
+    android:propertyName="strokeColor"
+    android:repeatCount="infinite"
+    android:repeatMode="reverse"
+    android:valueFrom="#33FFFFFF"
+    android:valueTo="#CCFFFFFF"
+    android:valueType="colorType"
+    />
+
Index: frameworks/base/packages/SystemUI/res/drawable/unlock_all_animation.xml
===================================================================
--- frameworks/base/packages/SystemUI/res/drawable/unlock_all_animation.xml	(revision 0)
+++ frameworks/base/packages/SystemUI/res/drawable/unlock_all_animation.xml	(revision 1023)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<animated-vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:drawable="@drawable/unlock_all">
+    <target
+        android:animation="@anim/arrow_animator_1"
+        android:name="arrow_1" />
+    <target
+        android:animation="@anim/arrow_animator_2"
+        android:name="arrow_2" />
+</animated-vector>
\ No newline at end of file
Index: frameworks/base/packages/SystemUI/res/drawable/unlock_all.xml
===================================================================
--- frameworks/base/packages/SystemUI/res/drawable/unlock_all.xml	(revision 0)
+++ frameworks/base/packages/SystemUI/res/drawable/unlock_all.xml	(revision 1023)
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="48dp"
+    android:height="48dp"
+    android:viewportWidth="48"
+    android:viewportHeight="48">
+
+    <path
+        android:fillColor="#88FFFFFF"
+        android:pathData="M23.667,38.333c1.101,0,2-0.899,2-2s-0.899-2-2-2c-1.1,0-2,0.899-2,2S22.567,38.333,23.667,38.333z" />
+    <path
+        android:name="arrow2"
+        android:strokeColor="#88FFFFFF"
+        android:strokeWidth="2"
+        android:strokeMiterLimit="10"
+        android:pathData="M 28.667 16.328 L 23.672 11.333 L 18.667 16.339 " />
+    <path
+        android:name="arrow1"
+        android:strokeColor="#88FFFFFF"
+        android:strokeWidth="2"
+        android:strokeMiterLimit="10"
+        android:pathData="M 28.667 8.328 L 23.672 3.333 L 18.667 8.339 " />
+    <path
+        android:fillColor="#88FFFFFF"
+        android:pathData="M29.667,29.333h-1v-2c0-2.76-2.24-5-5-5s-5,2.24-5,5h1.9c0-1.71,1.39-3.1,3.1-3.1s3.101,1.39,3.101,3.1v2
+h-9.101c-1.1,0-2,0.899-2,2v10c0,1.101,0.9,2,2,2h12c1.101,0,2-0.899,2-2v-10C31.667,30.232,30.768,29.333,29.667,29.333z
+M29.667,41.333h-12v-10h12V41.333z" />
+</vector>
\ No newline at end of file
Index: frameworks/base/packages/SystemUI/res/values/dimens.xml
===================================================================
--- frameworks/base/packages/SystemUI/res/values/dimens.xml	(revision 1022)
+++ frameworks/base/packages/SystemUI/res/values/dimens.xml	(revision 1023)
@@ -438,6 +438,11 @@
     <dimen name="keyguard_affordance_icon_width">24dp</dimen>
 
     <dimen name="keyguard_indication_margin_bottom">65dp</dimen>
+	
+	<!-- add by dongdongli 20170831 start {-->
+	<dimen name="keyguard_affordance_customize_icon_height">48dp</dimen>
+	<dimen name="keyguard_affordance_customize_icon_width">48dp</dimen>
+	<!-- add end }-->
 
     <!-- The text size for battery level -->
     <dimen name="battery_level_text_size">12sp</dimen>
