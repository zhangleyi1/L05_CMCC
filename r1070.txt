Index: vendor/mediatek/proprietary/packages/apps/FactoryMode/src/com/mediatek/factorymode/FactoryModeBootCompleteServer.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/FactoryMode/src/com/mediatek/factorymode/FactoryModeBootCompleteServer.java	(revision 1069)
+++ vendor/mediatek/proprietary/packages/apps/FactoryMode/src/com/mediatek/factorymode/FactoryModeBootCompleteServer.java	(revision 1070)
@@ -84,6 +84,10 @@
         }catch(Exception e){
             e.printStackTrace();
         } 
+        if(mProductInfoBuff == null){
+        	Log.d(TAG, "wifi --mProductInfoBuff=null ");
+        	return;
+        }
 
         for (int i = 0; i < WIFI_LENGTH; i++) {
             if(mProductInfoBuff[WIFI_NVRAM_POS+i] !=(byte)0){
@@ -119,9 +123,16 @@
         }catch(Exception e){
             e.printStackTrace();
         }
+        if(mProductInfoBuff == null){
+        	Log.d(TAG, "BT--mProductInfoBuff = null");
+        	return;
+        }
+           
 
         for (int i = 0; i < BT_LENGTH; i++) {
+        	  Log.d(TAG, "BT: i= " + i);
             if(mProductInfoBuff[BT_NVRAM_POS+i] !=(byte)0){
+                Log.d(TAG, "mProductInfoBuff[BT_NVRAM_POS+i] = " + mProductInfoBuff[BT_NVRAM_POS+i] + "\n isNvramNull =" + isNvramNull);
                 isNvramNull = false;
                 break;
             }
@@ -128,7 +139,9 @@
         }
 
         for (int i = 0; i < BT_LENGTH && !isNvramNull; i++) {
+        	  Log.d(TAG, "BT: i= " + i);
             buff[i] = mProductInfoBuff[BT_NVRAM_POS+i];
+            Log.d(TAG, "mProductInfoBuff[BT_NVRAM_POS+i] = " + mProductInfoBuff[BT_NVRAM_POS+i] + "\n isNvramNull =" + isNvramNull);
         }
 
         if(!isNvramNull){
@@ -135,6 +148,7 @@
             try{
                 agent.writeFile(BT_NVRAM_ID,buff);
             }catch(Exception e){
+            	  Log.d(TAG, "agent.writeFile error");
                 e.printStackTrace();
                 return ;
             }  
