Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/tptwo/TpTwo.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/tptwo/TpTwo.java	(revision 2543)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/tptwo/TpTwo.java	(revision 2544)
@@ -28,8 +28,8 @@
 
 public class TpTwo extends Activity {
 	static final float MAX_VELOCITY = 160;
-	static final int MARGIN_WIDTH = 120;
-	static final int LINE_WIDTH = 80;
+	static final int MARGIN_WIDTH = 150;
+	static final int LINE_WIDTH = 100;
 	static final int ERROR_RANGE = 120;
 
 	private View mLineView;
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/fingerprint/Fingerprint.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/fingerprint/Fingerprint.java	(revision 2543)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/fingerprint/Fingerprint.java	(revision 2544)
@@ -22,11 +22,56 @@
 
 import android.content.ComponentName;
 
+import android.annotation.Nullable;
+import android.content.Intent;
+import android.hardware.fingerprint.FingerprintManager;
+import android.os.CancellationSignal;
+import android.os.Handler;
+import android.os.UserHandle;
+import com.android.internal.logging.MetricsProto.MetricsEvent;
+import android.os.CancellationSignal;
+import android.os.Handler;
+import android.os.Message;
+import java.io.BufferedReader;
+import java.io.FileNotFoundException;
+import java.io.FileReader;
+import java.io.IOException;
 public class Fingerprint extends Activity implements OnClickListener{
 	private static final int PROGRESS_BAR_MAX = 10000;
-	//private Button succesButton ;
-	//private Button failButton ;
+	private boolean result4Flag = false;
+	private boolean result5Flag = false;
+	private boolean result6Flag = false;
+	private boolean result1Flag = false;
+	private boolean result2Flag = false;
+	private boolean result3Flag = false;
+	TextView result1,result2,result3,result4,result5,result6;
 	Button bt_base_left, bt_base_right;
+	int remain;
+	int i =0;
+	private FingerprintManager mFingerprintManager;
+	protected byte[] token;
+	private CancellationSignal mEnrollmentCancel;
+	Handler handler = new Handler() {
+			public void handleMessage(Message msg) {
+					result4.setText("pass");
+					result4Flag=true;
+					if(i==1){
+						result5.setText("pass");
+						result5Flag=true;
+					}else if(i==2){
+						result6.setText("pass");
+						result6Flag=true;
+						}
+					i++;
+				
+				super.handleMessage(msg);
+				if(result4Flag == true && result5Flag == true && result6Flag == true 
+					 && result2Flag == true && result3Flag == true){
+					result1.setText("pass");
+					bt_base_left.setEnabled(true);
+				}
+			}
+		};
 	@Override
 	protected void onCreate(Bundle savedInstanceState) {
 		// TODO Auto-generated method stub
@@ -34,12 +79,13 @@
 		//getWindow().addFlags(WindowManager.LayoutParams.FLAG_HOMEKEY_DISPATCHED);
 		setContentView(R.layout.activity_fingerprint);
 
+		mFingerprintManager = this.getSystemService(FingerprintManager.class);
         Intent i = new Intent(Intent.ACTION_MAIN);
         i.setComponent(new ComponentName("com.android.settings","com.android.settings.fingerprint.FingerprintEnrollFindSensor"));
-        byte[] token = new byte[69];
+        token = new byte[69];
         i.putExtra("hw_auth_token", token);
         i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
-        startActivity(i);
+     //  startActivity(i);
 
 		
 		bt_base_left = (Button) findViewById(R.id.bt_base_left);
@@ -50,24 +96,27 @@
 		bt_base_right.setText(R.string.bt_fail);
 		bt_base_right.setOnClickListener(this);
 		
-	/*	
-		IntentFilter mfilter = new IntentFilter();
-		mfilter.addAction("intent.action.finger_FACTORY_MODE_TEST");
-		registerReceiver(new BroadcastReceiver() {
-			@Override
-			public void onReceive(Context context, Intent intent) {
-				Log.v("Finger", "finger_FACTORY_MODE_TEST");
-				int progress = intent.getIntExtra("progress", 0);
-				if (progress > 0) {
-				    bt_base_left.setEnabled(true);
-				}
-				if (progress >= PROGRESS_BAR_MAX) {
-				    testFinish();
-			  }
-			}
-        }, mfilter);*/
-		bt_base_left.setEnabled(true);
+		result1= (TextView) findViewById(R.id.result1);
+		result2= (TextView) findViewById(R.id.result2);
+		result3= (TextView) findViewById(R.id.result3);
+		
+		result4= (TextView) findViewById(R.id.result4);
+		result5= (TextView) findViewById(R.id.result5);
+		result6= (TextView) findViewById(R.id.result6);
+	
+		bt_base_left.setEnabled(false);
+	if(getFingerflag().equalsIgnoreCase("0x1")){
+		//	result1.setText("pass");
+		//	result1Flag=true;
+			result2.setText("pass");
+			result2Flag=true;
+			result3.setText("pass");
+			result3Flag=true;
 	}
+	mEnrollmentCancel = new CancellationSignal();
+	mFingerprintManager.enroll(token, mEnrollmentCancel,
+                0 /* flags */, 0, mEnrollmentCallback);
+	}
 	
 	
 	public void testFinish() {
@@ -130,4 +179,50 @@
 		}
 		return super.onKeyUp(keyCode, event);
 	}
+	   private FingerprintManager.EnrollmentCallback mEnrollmentCallback
+            = new FingerprintManager.EnrollmentCallback() {
+        @Override
+        public void onEnrollmentProgress(int remaining) {
+		  	Message message = new Message();
+			message.what = remaining;
+			handler.sendMessage(message);
+        }
+        @Override
+        public void onEnrollmentHelp(int helpMsgId, CharSequence helpString) {
+            Log.i("tag","helpString  "+helpString);
+        }
+        @Override
+        public void onEnrollmentError(int errMsgId, CharSequence errString) {
+        Log.i("tag","errString  "+errString);
+    }};
+	private static String getFingerflag() {
+		String filePath = "/proc/finger_flag";
+        String tpFwVersion = "unknow";
+        try {
+            BufferedReader reader = new BufferedReader(new FileReader(filePath), 256);
+            if (reader != null) {
+                try {
+                    int version = reader.read();
+                    tpFwVersion = "0x" + Integer.toHexString(version);
+                } catch (IOException e) {
+                    Log.e("TAG", "getFingerflag readLine failed!");
+                }
+            }
+        } catch (FileNotFoundException e) {
+            Log.e("TAG", "getFingerflag new BufferedReader failed!");
+        }
+        return tpFwVersion;
+    }
+	protected void delay() {
+	 	new Thread(new Runnable()
+        {  
+            public void run()
+            {  
+                try {
+                Thread.sleep(3000);
+                } catch (InterruptedException e) {
+                e.printStackTrace();
+                }  
+            }  
+        }).start();}
 }
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/sdcard/SdCard.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/sdcard/SdCard.java	(revision 2543)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/sdcard/SdCard.java	(revision 2544)
@@ -26,7 +26,7 @@
 public class SdCard extends Activity implements OnClickListener {
 	public static final String TAG = "SDCard";
 	private static String SD_CARD = SystemProperties.get("vold.path.external_sd");
-    //private static String SD_CARD = "/storage/sdcard0";
+   // private static String SD_CARD = "/storage/sdcard0";
 	TextView tv_base_title, tv_base_pixi;
 
 	Button bt_base_left, bt_base_right;
@@ -58,15 +58,7 @@
 				.getSystemService(Context.STORAGE_SERVICE);
 		if (mStorageManager.getVolumeState(SD_CARD).equals(
 				Environment.MEDIA_MOUNTED)) {
-			long availableMB = getAvailaleSize();
-			long totalMB = getAllSize();
-			tv_base_pixi.setText("SDCard tips success" + "\n\n"
-					+ "SDCard totalsize" + totalMB
-					+ " MB\n\n" + "SDCard freesize"
-					+ availableMB + " MB");
-			if (totalMB != 0) {
-				bt_base_left.setEnabled(true);
-			}
+			showSize();
 
 		} else {
 			tv_base_pixi.setText("SDCard tips failed");
@@ -99,17 +91,8 @@
 				  }else if (action.equals(Intent.ACTION_MEDIA_SCANNER_STARTED)){
 					 
 				  }else if (action.equals(Intent.ACTION_MEDIA_SCANNER_FINISHED)){
+					showSize();
 	
-	
-				  long availableMB = getAvailaleSize();
-				  long totalMB = getAllSize();
-				  tv_base_pixi.setText("SDCard tips success" + "\n\n"
-						  + "SDCard totalsize" + totalMB
-						  + " MB\n\n" + "SDCard freesize"
-						  + availableMB + " MB");
-				  if (totalMB != 0) {
-					  bt_base_left.setEnabled(true);
-				  }
 					
 				  }else {	 
 					 
@@ -165,4 +148,41 @@
 		}
 		return super.onKeyUp(keyCode, event);
 	}
+		public void showSize() {
+						long availableMB = getAvailableExternalMemorySize();//getAvailaleSize();
+				  		long totalMB = getTotalExternalMemorySize();//getAllSize();
+					    tv_base_pixi.setText("SDCard tips success" + "\n\n"
+						  + "SDCard totalsize" + totalMB
+						  + " MB\n\n" + "SDCard freesize"
+						  + availableMB + " MB");
+				  if (totalMB != 0) {
+					  bt_base_left.setEnabled(true);
+				  }
+					  }
+		static public boolean isExternalStorageAvailable() { 
+    return Environment.getExternalStorageState().equals( 
+            Environment.MEDIA_MOUNTED); 
+}  
+    static public long getAvailableExternalMemorySize() {
+        if (isExternalStorageAvailable()) {
+            File path = Environment.getExternalStorageDirectory();
+            StatFs stat = new StatFs(path.getPath());
+            long blockSize = stat.getBlockSize();
+            long availableBlocks = stat.getAvailableBlocks();
+            return availableBlocks * blockSize / 1024 / 1024;
+        } else {
+            return -1;
+        }
+    }
+    static public long getTotalExternalMemorySize() {
+        if (isExternalStorageAvailable()) {
+            File path = Environment.getExternalStorageDirectory(); 
+            StatFs stat = new StatFs(path.getPath());
+            long blockSize = stat.getBlockSize();
+            long totalBlocks = stat.getBlockCount();
+            return totalBlocks * blockSize / 1024 / 1024;
+        } else {
+            return -1;
+        }
+    }
 }
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/frontcameraflasher/FrontCameraFlasher.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/frontcameraflasher/FrontCameraFlasher.java	(revision 2543)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/frontcameraflasher/FrontCameraFlasher.java	(revision 2544)
@@ -26,8 +26,7 @@
 
 
 public class FrontCameraFlasher extends Activity implements OnClickListener {
-	private static final String FLASHLIGHT_TEST = "/dev/flashlight_test";
-	 private int bInput = 0;
+
 	TextView tv_base_title, tv_base_pixi;
 	Button bt_base_left, bt_base_right;
 	Camera camera;
@@ -40,30 +39,13 @@
 	static final int INTERVAL = 500;
 	Handler handler = new Handler() {
 		public void handleMessage(Message msg) {
-			if (//msg.what % 2 == 0
-				true) {
-				processOnFlash();
-			} else {
-				processOffFlash();
-			}
-			showCount++;
-			if (showCount == (FLASH_NUMBER - 1) * 2) {
 				bt_base_left.setVisibility(View.VISIBLE);
 				bt_base_right.setVisibility(View.VISIBLE);
-			}
 			super.handleMessage(msg);
 		}
 
 	};
 
-	class MytimerTask extends TimerTask {
-		public void run() {
-			Message message = new Message();
-			message.what = count;
-			handler.sendMessage(message);
-			count++;
-		}
-	}
 
 	@Override
 	protected void onCreate(Bundle savedInstanceState) {
@@ -85,8 +67,14 @@
 		bt_base_right = (Button) findViewById(R.id.bt_base_right);
 		bt_base_right.setText(R.string.bt_fail);
 		bt_base_right.setOnClickListener(this);
+		bt_base_right.getBackground().setAlpha(100);
+		bt_base_left.getBackground().setAlpha(100);
 		bt_base_left.setVisibility(View.GONE);
 		bt_base_right.setVisibility(View.GONE);
+		camera = Camera.open(1);
+		p = camera.getParameters();
+		processOnFlash();
+		delay(2000);
 	}
 
 	@Override
@@ -94,11 +82,6 @@
 		super.onResume();
 		count = 0;
 	//	camera = Camera.open();
-		openFrontCamera();
-		p = camera.getParameters();
-		for (int i = 0; i < FLASH_NUMBER * 2 - 1; i++) {
-			timer.schedule(new MytimerTask(), DELAY + INTERVAL * i);
-		}
 	}
 
 	@Override
@@ -105,7 +88,6 @@
 	public void onClick(View v) {
 		switch (v.getId()) {
 		case R.id.bt_base_left: {
-			processOffFlash();
 			if (camera != null) {
 				camera.stopPreview();
 				camera.release();
@@ -118,7 +100,6 @@
 		}
 
 		case R.id.bt_base_right: {
-			processOffFlash();
 			Intent intent = new Intent(FrontCameraFlasher.this, MMITestDevice.class);
 			setResult(RESULT_CANCELED, intent);
 			finish();
@@ -129,16 +110,19 @@
 	}
 
 	private void processOnFlash() {
-		 bInput = bInput | 0x01;
-         FlashLightControl(String.valueOf(bInput)); 
+		if (p != null || camera != null) {
+			p.setFlashMode(Parameters.FLASH_MODE_TORCH);
+			camera.setParameters(p);
+			camera.startPreview();
+		}
 	}
 
 	private void processOffFlash() {
-		bInput = bInput & 0x02;
-        FlashLightControl(String.valueOf(bInput));
+		if (p != null || camera != null) {
+			p.setFlashMode(Parameters.FLASH_MODE_OFF);
+			camera.setParameters(p);
+			camera.stopPreview();
 		}
-	public void FlashLightControl(String code) {
-	  ShellUtils.writeFile(FLASHLIGHT_TEST,code);
 	}
 
 	@Override
@@ -178,17 +162,20 @@
 		return super.onKeyUp(keyCode, event);
 	}
 
-	public void openFrontCamera() {
-        for (int i = 0; i < Camera.getNumberOfCameras(); i++) {
-            CameraInfo info = new CameraInfo();
-            Camera.getCameraInfo(i, info);
-            if (info.facing == CameraInfo.CAMERA_FACING_FRONT
-                    && null == camera) {
-                camera = Camera.open(i);  
-            }else{
-     //       camera = Camera.open();
-            }
+	protected void delay(long time) {
+		Message message = new Message();
+		message.what = 000;
+	 	new Thread(new Runnable()
+        {  
+            public void run()
+            {  
+                try {
+                Thread.sleep(time);
+                } catch (InterruptedException e) {
+                e.printStackTrace();
         }
+                handler.sendMessage(message);
     }
+        }).start();}
 }
 
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/MyAutoTest.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/MyAutoTest.java	(revision 2543)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/MyAutoTest.java	(revision 2544)
@@ -47,9 +47,10 @@
 	public void onClick(View v) {
 		switch (v.getId()) {
 		case R.id.bt_base_left: {
-			Intent intent = new Intent(MyAutoTest.this, MMITestDevice.class);
-			setResult(RESULT_CANCELED, intent);
-			finish();
+			Intent intent = new Intent("android.intent.action.ACTION_REQUEST_SHUTDOWN");
+            intent.putExtra("android.intent.extra.KEY_CONFIRM", false);
+            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+            startActivity(intent);
 			break;
 		}
 
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/audio/Audio.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/audio/Audio.java	(revision 2543)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/audio/Audio.java	(revision 2544)
@@ -72,7 +72,10 @@
 		Log.e("yyAudio", "maxVolume=" + maxVolume + "currentVolume=" + currentVolume);
 		bt_base_left.setVisibility(View.GONE);
 		bt_base_right.setVisibility(View.GONE);
+		bt_base_right.getBackground().setAlpha(100);
+		bt_base_left.getBackground().setAlpha(100);
 		delay(4000);
+		Earphone();	
 	}
 
 	@Override
@@ -79,19 +82,18 @@
 	protected void onResume() {
 		super.onResume();
 		if(audioManager != null){
-			audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, maxVolume , AudioManager.FLAG_PLAY_SOUND|AudioManager.FLAG_SHOW_UI );
+	//		audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, maxVolume , AudioManager.FLAG_PLAY_SOUND|AudioManager.FLAG_SHOW_UI );
 		}
 		  
-		Earphone();		
 	}
 	
 	@Override
 	protected void onPause() {
 		super.onPause();
-		if (musicPlayer != null) {
+	/*	if (musicPlayer != null) {
 			musicPlayer.release();
 			musicPlayer = null;
-		}		
+		}		*/
 	}
 
 	@Override
@@ -146,6 +148,7 @@
 			Intent intent = new Intent(Audio.this, MMITestDevice.class);
 			setResult(RESULT_CANCELED, intent);
 			finish();
+			onDestroy();
 			break;
 		}
 
@@ -203,7 +206,7 @@
 	protected void onStop() {
 		super.onStop();
         
-	    SystemProperties.set("persist.sys.testearphone", "0");
+/*	    SystemProperties.set("persist.sys.testearphone", "0");
         SystemProperties.set("persist.sys.testspeaker", "0");
 
         if (musicPlayer != null) {
@@ -214,12 +217,23 @@
         if(audioManager != null){
             audioManager.setMode(AudioManager.MODE_NORMAL);            
 			audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, currentVolume, 0); 
-		}
+		}*/
 	}
 	
 	@Override
 	protected void onDestroy() {
 		super.onDestroy();
+		 SystemProperties.set("persist.sys.testearphone", "0");
+        SystemProperties.set("persist.sys.testspeaker", "0");
+        if (musicPlayer != null) {
+            musicPlayer.release();
+            musicPlayer = null;
+        }
+        isMic = false;
+        if(audioManager != null){
+            audioManager.setMode(AudioManager.MODE_NORMAL);            
+			audioManager.setStreamVolume(AudioManager.STREAM_MUSIC, currentVolume, 0); 
+		}
 		if (musicPlayer != null) {
 			musicPlayer.release();
 			musicPlayer = null;
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/values/strings.xml
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/values/strings.xml	(revision 2543)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/values/strings.xml	(revision 2544)
@@ -97,4 +97,14 @@
 	<string name="compass_title">Compass</string>
 	<string name="battery_level_name">Battery level</string>
 	<string name="power_off">power off</string>
+	<string name="restart">RESTART</string>
+	<string name="all_passed">ALL PASSED</string>
+	<string name="not_test">Not Test</string>
+	<string name="testing">Testing</string>
+	<string name="auto_test">Auto test</string>
+	<string name="reset_test">Reset test</string>
+	<string name="spi_test">SPI test</string>
+	<string name="finger_down_test">Finger down test</string>
+	<string name="scene_test">Scene test</string>
+	<string name="image_quality_test">Image quality test</string>
 </resources>
\ No newline at end of file
Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/layout/activity_fingerprint.xml
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/layout/activity_fingerprint.xml	(revision 2543)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/res/layout/activity_fingerprint.xml	(revision 2544)
@@ -1,19 +1,212 @@
 <?xml version="1.0" encoding="utf-8"?>
-<LinearLayout
+<RelativeLayout
 	android:orientation="vertical"
 	android:layout_width="fill_parent"
 	android:layout_height="fill_parent"
   xmlns:android="http://schemas.android.com/apk/res/android">
   
-    <TextView 
-		android:textSize="22.0dip"
-		android:id="@+id/finger_tips"
-		android:layout_width="wrap_content"
-		android:layout_height="wrap_content"
-		android:text="@string/finger_tips" />
+   <LinearLayout 
+        android:orientation="vertical"
+		android:layout_width="fill_parent"
+		android:layout_height="fill_parent"
+        >
+	<LinearLayout 
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+       android:layout_margin="20dp"
+        >
+        <TextView
+        android:id="@+id/finger_tips"
+        android:layout_width="0dp"
+         android:layout_weight="1"
+        android:layout_height="wrap_content"
+        android:text="@string/auto_test"
+        android:gravity="center"
+        android:textSize="20dp"
+        />
+        
+         <TextView
+        android:id="@+id/result1"
+        android:layout_width="0dp"
+        android:layout_weight="1"
+        android:layout_height="wrap_content"
+        android:text="@string/testing"
+        android:gravity="center"
+        android:textSize="20dp"
+        />
+        
+    </LinearLayout>
+<Button
+        android:layout_width="match_parent"
+        android:layout_height="2dp"
+        android:background="#4D4D4D"
+        />
+    <LinearLayout 
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+       android:layout_margin="20dp"
+        >
+        <TextView
+        android:id="@+id/textView1"
+        android:layout_width="0dp"
+        android:layout_weight="1"
+        android:layout_height="wrap_content"
+        android:text="@string/reset_test"
+        android:gravity="center"
+        android:textSize="20dp"
+        />
+        
+        <TextView
+        android:id="@+id/result2"
+        android:layout_width="0dp"
+        android:layout_weight="1"
+        android:layout_height="wrap_content"
+        android:text="@string/not_test"
+        android:gravity="center"
+        android:textSize="20dp"
+        />
+        
+    </LinearLayout>
+    <Button
+        android:layout_width="match_parent"
+        android:layout_height="2dp"
+        android:background="#4D4D4D"
+        />
+    <LinearLayout 
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+       android:layout_margin="20dp"
+        >
+        <TextView
+        android:id="@+id/textView1"
+        android:layout_width="0dp"
+        android:layout_weight="1"
+        android:layout_height="wrap_content"
+        android:text="@string/spi_test"
+        android:gravity="center"
+        android:textSize="20dp"
+        />
+        
+         <TextView
+        android:id="@+id/result3"
+        android:layout_width="0dp"
+        android:layout_weight="1"
+        android:layout_height="wrap_content"
+        android:text="@string/not_test"
+        android:gravity="center"
+        android:textSize="20dp"
+        />
+        
+    </LinearLayout>
+    <Button
+        android:layout_width="match_parent"
+        android:layout_height="2dp"
+        android:background="#4D4D4D"
+        />
+    <LinearLayout 
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+    android:layout_margin="20dp"
+        >
+        <TextView
+        android:id="@+id/textView1"
+        android:layout_width="0dp"
+         android:layout_weight="1"
+        android:layout_height="wrap_content"
+        android:text="@string/finger_down_test"
+        android:gravity="center"
+        android:textSize="20dp"
+        />
+        
+         <TextView
+        android:id="@+id/result4"
+        android:layout_width="0dp"
+        android:layout_weight="1"
+        android:layout_height="wrap_content"
+        android:text="@string/not_test"
+        android:gravity="center"
+        android:textSize="20dp"
+        />
+        
+    </LinearLayout>
+    <Button
+        android:layout_width="match_parent"
+        android:layout_height="2dp"
+        android:background="#4D4D4D"
+        />
+    <LinearLayout 
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:layout_margin="20dp"
+        >
+        <TextView
+        android:id="@+id/textView1"
+        android:layout_width="0dp"
+        android:layout_weight="1"
+        android:layout_height="wrap_content"
+        android:text="@string/scene_test"
+        android:gravity="center"
+        android:textSize="20dp"
+        />
+        
+         <TextView
+        android:id="@+id/result5"
+        android:layout_width="0dp"
+        android:layout_weight="1"
+        android:layout_height="wrap_content"
+        android:text="@string/not_test"
+        android:gravity="center"
+        android:textSize="20dp"
+        />
+        
+    </LinearLayout>
+    <Button
+        android:layout_width="match_parent"
+        android:layout_height="2dp"
+        android:background="#4D4D4D"
+        />
+    
+    <LinearLayout 
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:layout_margin="20dp"
+        >
+        <TextView
+        android:id="@+id/textView1"
+        android:layout_width="0dp"
+        android:layout_weight="1"
+        android:layout_height="wrap_content"
+        android:text="@string/image_quality_test"
+        android:gravity="center"
+        android:textSize="20dp"
+        />
+        
+         <TextView
+        android:id="@+id/result6"
+        android:layout_width="0dp"
+        android:layout_weight="1"
+        android:layout_height="wrap_content"
+        android:text="@string/not_test"
+        android:gravity="center"
+        android:textSize="20dp"
+        />
+        
+    </LinearLayout>
+    <Button
+        android:layout_width="match_parent"
+        android:layout_height="2dp"
+        android:background="#4D4D4D"
+        />
+    </LinearLayout>
     <include
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
         android:layout_alignParentBottom="true"
         layout="@layout/base_button" />
-</LinearLayout>
+</RelativeLayout>
Index: vendor/mediatek/proprietary/packages/apps/EmCamera/src/com/mediatek/emcamera/Camera_mmi.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/EmCamera/src/com/mediatek/emcamera/Camera_mmi.java	(revision 2543)
+++ vendor/mediatek/proprietary/packages/apps/EmCamera/src/com/mediatek/emcamera/Camera_mmi.java	(revision 2544)
@@ -2545,7 +2545,7 @@
         mPreviewPanel = findViewById(R.id.frame_layout);
         mPreviewFrameLayout = (PreviewFrameLayout) findViewById(R.id.frame);
         Elog.v(TAG, "setAspectRatio " + aspectWtoH);
-        mPreviewFrameLayout.setAspectRatio(aspectWtoH);
+        mPreviewFrameLayout.setAspectRatio(1.925);
 
         // Set a preview size that is closest to the viewfinder height and has
         // the right aspect ratio.
Index: vendor/mediatek/proprietary/packages/apps/EmCamera/res/layout/new_camera_mmi.xml
===================================================================
--- vendor/mediatek/proprietary/packages/apps/EmCamera/res/layout/new_camera_mmi.xml	(revision 2543)
+++ vendor/mediatek/proprietary/packages/apps/EmCamera/res/layout/new_camera_mmi.xml	(revision 2544)
@@ -8,8 +8,10 @@
     governing permissions and limitations under the License. -->
 
 <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/app_root" android:layout_width="match_parent"
-    android:layout_height="match_parent" android:orientation="vertical"
+    android:id="@+id/app_root" 
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
     android:gravity="center">
     
   <TextView 
@@ -27,17 +29,18 @@
         android:layout_weight="1">
         
         <com.mediatek.emcamera.PreviewFrameLayout
-            android:id="@+id/frame" android:layout_centerInParent="true"
-            android:layout_width="match_parent" android:layout_height="match_parent">
+            android:id="@+id/frame"
+            android:layout_centerInParent="true"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent">
             <SurfaceView android:id="@+id/camera_preview"
-                android:layout_width="match_parent" android:layout_height="match_parent" />
+                android:layout_width="match_parent"
+                android:layout_height="match_parent" />
             <com.mediatek.emcamera.FaceView android:id="@+id/face_view"
                 android:layout_width="match_parent"
                 android:layout_height="match_parent"
                 android:visibility="gone"/>
             <include layout="@layout/new_focus_indicator" />
-        </com.mediatek.emcamera.PreviewFrameLayout>
-    </RelativeLayout>
     
 
 <LinearLayout 
@@ -45,7 +48,8 @@
     android:layout_width="match_parent"
     android:layout_height="wrap_content" 
     android:gravity="center"
-    android:orientation="horizontal" >
+    	android:orientation="horizontal"
+    	android:layout_alignParentBottom="true">
 
     <Button
         android:id="@+id/bt_base_left"
@@ -66,5 +70,7 @@
         android:textSize="20dp" />
 
 </LinearLayout>
+        </com.mediatek.emcamera.PreviewFrameLayout>
+    </RelativeLayout>
 
 </LinearLayout>
\ No newline at end of file
