Index: packages/apps/Settings/src/com/android/settings/SchedulePlanTypeSettings.java
===================================================================
--- packages/apps/Settings/src/com/android/settings/SchedulePlanTypeSettings.java	(revision 1285)
+++ packages/apps/Settings/src/com/android/settings/SchedulePlanTypeSettings.java	(revision 1286)
@@ -82,8 +82,8 @@
         custom_schedule = (CheckBoxPreference) findPreference(KEY_SETTING_TIME);
         sunset2sunrise = (CheckBoxPreference) findPreference(KEY_SUNSET_SUNRISE);
         modePrenference = getContext().getSharedPreferences(PREFERENCE_NAME, 0);
-        boolean checkoutTime = modePrenference.getBoolean(SETTING_TIME_PLAN, false);	
-		boolean auto = modePrenference.getBoolean(SUNSET_TO_SUNRISE, false);	
+        boolean checkoutTime = modePrenference.getBoolean(SETTING_TIME_PLAN, false);
+		boolean auto = modePrenference.getBoolean(SUNSET_TO_SUNRISE, true);
 		updateTimeDisplay();
 		sunset2sunrise.setChecked(auto);
         if (checkoutTime) {
@@ -92,7 +92,7 @@
             turn_on_at.setShouldDisableView(false);
             turn_off_at.setEnabled(true);
             turn_off_at.setShouldDisableView(false);
-			
+
         } else {
         	custom_schedule.setChecked(false);
             turn_on_at.setEnabled(false);
@@ -124,7 +124,7 @@
 						if(!custom_schedule.isChecked()){
 							PictureQuality.enableBlueLight(false);
 						}
-						
+
 					 }
 					  return true;
             	}
@@ -147,7 +147,7 @@
 					NightModeUtils.sendBroad(OPEN_ACTION, getContext(), OPEN, Integer.parseInt(timeOns[0]), Integer.parseInt(timeOns[1]), 0);
             		NightModeUtils.sendBroad(CLOSE_ACTION, getContext(), CLOSE, Integer.parseInt(timeOffs[0]), Integer.parseInt(timeOffs[1]), -1);
 					/*PictureQuality.enableBlueLight(true);
-					
+
 					UiModeManager uiManager = (UiModeManager) getContext().getSystemService(
                 		Context.UI_MODE_SERVICE);
         			uiManager.setNightMode(UiModeManager.MODE_NIGHT_YES);
@@ -173,9 +173,9 @@
             @Override
             public boolean onPreferenceClick(Preference preference) {
                 if(!modePrenference.getBoolean(SETTING_TIME_PLAN, false)){
-                    
+
                 }else{
-					
+
        				String timeon=modePrenference.getString(TIME_ON,timeOn);
 					String[] hourMin=timeon.split(":");
 					TimePickerDialog timeOnDialog=new TimePickerDialog(getContext(),timeOnListener,
@@ -190,11 +190,11 @@
             @Override
             public boolean onPreferenceClick(Preference preference) {
                 if(!modePrenference.getBoolean(SETTING_TIME_PLAN, false)){
-                    
+
                 }else{
 					String timeoff=modePrenference.getString(TIME_Off,timeOff);
 					String[] hourMin=timeoff.split(":");
-					
+
         			TimePickerDialog dialog=new TimePickerDialog(getContext(),timeOffListener,
                 							Integer.parseInt(hourMin[0]),Integer.parseInt(hourMin[1]),
                								 DateFormat.is24HourFormat(getActivity()));
@@ -224,11 +224,11 @@
 				}else{
 					min=""+minute;
 				}
-				
+
             	modePrenference.edit().putString(TIME_ON,hour+":"+min).commit();
-				
+
             	updateTimeDisplay();
-				
+
             }
         };
 		 timeOffListener=new TimePickerDialog.OnTimeSetListener() {
@@ -238,7 +238,7 @@
 					String content=getContext().getResources().getString(R.string.setting_time_error);
 					Toast.makeText(getContext(),content,Toast.LENGTH_SHORT).show();
 				}else{
-				
+
             	String hour="";
 				String min="";
            		 if(hourOfDay<10){
