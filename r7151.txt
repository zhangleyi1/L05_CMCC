Index: packages/apps/Dialer/InCallUI/src/com/android/incallui/CallCardFragment.java
===================================================================
--- packages/apps/Dialer/InCallUI/src/com/android/incallui/CallCardFragment.java	(revision 7150)
+++ packages/apps/Dialer/InCallUI/src/com/android/incallui/CallCardFragment.java	(revision 7151)
@@ -26,6 +26,10 @@
 import android.animation.AnimatorSet;
 import android.animation.ObjectAnimator;
 import android.content.Context;
+import android.content.IntentFilter;
+import android.content.BroadcastReceiver;
+import android.content.Intent;
+
 import android.graphics.Bitmap;
 import android.graphics.Canvas;
 import android.graphics.drawable.AnimationDrawable;
@@ -217,6 +221,8 @@
      */
     private boolean mSecondCallInforLatestVisibility = false;
 
+	private ChangeCallReceiver mChangeCallReceiver;
+
     @Override
     public CallCardPresenter.CallCardUi getUi() {
         return this;
@@ -246,7 +252,19 @@
         if (savedInstanceState != null) {
             mIsDialpadShowing = savedInstanceState.getBoolean(IS_DIALPAD_SHOWING_KEY, false);
         }
+		mChangeCallReceiver=new ChangeCallReceiver();
+		IntentFilter filter=new IntentFilter();
+		filter.addAction("com.android.server.telecom.CHANGECALL");
+		getActivity().registerReceiver(mChangeCallReceiver, filter); 
     }
+	@Override
+	public void onDestroy() {
+		// TODO Auto-generated method stub
+		super.onDestroy();
+		if(mChangeCallReceiver!=null){
+			getActivity().unregisterReceiver(mChangeCallReceiver);
+		}
+	}
 
     @Override
     public void onActivityCreated(Bundle savedInstanceState) {
@@ -2072,4 +2090,15 @@
 			return false;
 		}
 	}
+	class ChangeCallReceiver extends BroadcastReceiver{
+
+		@Override
+		public void onReceive(Context context, Intent intent) {
+			String action=intent.getAction();
+			if("com.android.server.telecom.CHANGECALL".equals(action)){
+				getPresenter().secondaryInfoClicked();
+                updateFabPositionForSecondaryCallInfo();
+			}
+		}
+	} 
 }
Index: packages/services/Telecomm/src/com/android/server/telecom/HeadsetMediaButton.java
===================================================================
--- packages/services/Telecomm/src/com/android/server/telecom/HeadsetMediaButton.java	(revision 7150)
+++ packages/services/Telecomm/src/com/android/server/telecom/HeadsetMediaButton.java	(revision 7151)
@@ -38,6 +38,9 @@
     // Types of media button presses
     static final int SHORT_PRESS = 1;
     static final int LONG_PRESS = 2;
+	private long mLastClickTime = 0;
+	private static boolean mDown= false;
+	private final static String changeCallAction="com.android.server.telecom.CHANGECALL";
 
     private static final AudioAttributes AUDIO_ATTRIBUTES = new AudioAttributes.Builder()
             .setContentType(AudioAttributes.CONTENT_TYPE_SPEECH)
@@ -105,7 +108,7 @@
         mContext = context;
         mCallsManager = callsManager;
         mLock = lock;
-
+		mLastClickTime=0;
         // Create a MediaSession but don't enable it yet. This is a
         // replacement for MediaButtonReceiver
         mMediaSessionHandler.obtainMessage(MSG_MEDIA_SESSION_INITIALIZE).sendToTarget();
@@ -118,16 +121,25 @@
      */
     private boolean handleHeadsetHook(KeyEvent event) {
         Log.d(this, "handleHeadsetHook()...%s %s", event.getAction(), event.getRepeatCount());
-
+		int keycode = event.getKeyCode();
+		long eventtime = event.getEventTime();// CallCardFragment.java
         if (event.isLongPress()) {
             return mCallsManager.onMediaButton(LONG_PRESS);
         } else if (event.getAction() == KeyEvent.ACTION_UP && event.getRepeatCount() == 0) {
-            return mCallsManager.onMediaButton(SHORT_PRESS);
-        }
+        	return mCallsManager.onMediaButton(SHORT_PRESS);
+        }else if(event.getAction() == KeyEvent.ACTION_DOWN){
+			if(eventtime -mLastClickTime < 300 && keycode == KeyEvent.KEYCODE_HEADSETHOOK){
+				Intent callIntent=new Intent(changeCallAction);
+				mContext.sendBroadcast(callIntent);
+				mLastClickTime=0;
+				return true;
+			}else{
+				mLastClickTime=eventtime;
+			}
+		}
+		return true;
+	}
 
-        return true;
-    }
-
     /** ${inheritDoc} */
     @Override
     public void onCallAdded(Call call) {
