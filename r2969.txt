Index: vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/cameraled/CameraLed.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/cameraled/CameraLed.java	(revision 2968)
+++ vendor/mediatek/proprietary/packages/apps/MMITestDevice/src/com/android/mmi/cameraled/CameraLed.java	(revision 2969)
@@ -34,7 +34,7 @@
 	static final int INTERVAL = 500;
 	Handler handler = new Handler() {
 		public void handleMessage(Message msg) {
-			if (//msg.what % 2 == 0
+		/*	if (//msg.what % 2 == 0
 				true) {
 				processOnFlash();
 			} else {
@@ -45,7 +45,7 @@
 				bt_base_left.setVisibility(View.VISIBLE);
 				bt_base_right.setVisibility(View.VISIBLE);
 			}
-			super.handleMessage(msg);
+			super.handleMessage(msg);*/
 		}
 
 	};
@@ -79,6 +79,8 @@
 		bt_base_right = (Button) findViewById(R.id.bt_base_right);
 		bt_base_right.setText(R.string.bt_fail);
 		bt_base_right.setOnClickListener(this);
+		bt_base_right.getBackground().setAlpha(100);
+		bt_base_left.getBackground().setAlpha(100);
 		bt_base_left.setVisibility(View.GONE);
 		bt_base_right.setVisibility(View.GONE);
 	}
@@ -89,9 +91,10 @@
 		count = 0;
 		camera = Camera.open();
 		p = camera.getParameters();
-		for (int i = 0; i < FLASH_NUMBER * 2 - 1; i++) {
+	/*	for (int i = 0; i < FLASH_NUMBER * 2 - 1; i++) {
 			timer.schedule(new MytimerTask(), DELAY + INTERVAL * i);
-		}
+		}*/
+		processOnFlash();
 	}
 
 	@Override
@@ -124,6 +127,10 @@
 			p.setFlashMode(Parameters.FLASH_MODE_TORCH);
 			camera.setParameters(p);
 			camera.startPreview();
+			bt_base_right.getBackground().setAlpha(100);
+			bt_base_left.getBackground().setAlpha(100);
+			bt_base_left.setVisibility(View.VISIBLE);
+			bt_base_right.setVisibility(View.VISIBLE);
 		}
 	}
 
