Index: bootable/recovery/mt_recovery.cpp
===================================================================
--- bootable/recovery/mt_recovery.cpp	(revision 2550)
+++ bootable/recovery/mt_recovery.cpp	(revision 2551)
@@ -47,6 +47,7 @@
 extern char* browse_directory(const char* path, Device* device);
 extern void choose_recovery_file(Device* device);
 extern void run_graphics_test(Device* device);
+const char *JRDFOTA_RESULT_FILE = "/cache/recovery/last_fota.status"; //added by xuanfeng.ye for Task3615106
 
 #ifdef SUPPORT_DATA_BACKUP_RESTORE //wschen 2011-05-16
     const char *restore_data_path = NULL;
@@ -316,6 +317,7 @@
     return false;
 }
 
+int kind_of_update = FOTA_UN; //added by xuanfeng.ye for Task3615106
 void write_result_file(const char *file_name, int result)
 {
   if (get_nand_type() == 1) {  /* EMMC */
@@ -325,6 +327,43 @@
     } else {
         set_ota_result(0);
     }
+   	//added by xuanfeng.ye for Task3615106 begin
+    FILE* status=fopen_path(file_name,"w");
+    char buf[100];
+    if (INSTALL_SUCCESS == result) {
+        strcpy(buf, "package install result:INSTALL SUCCESS");
+    } else {
+        switch (result) {
+            case INSTALL_NO_SDCARD:
+                strcpy(buf, "package install result:Can not find update.zip");
+                break;
+            case INSTALL_NO_UPDATE_PACKAGE:
+                strcpy(buf, "package install result:Can not find update.zip");
+                break;
+            case INSTALL_NO_KEY:
+                strcpy(buf, "package install result:Signature verification failed");
+                break;
+            case INSTALL_SIGNATURE_ERROR:
+                strcpy(buf, "package install result:Signature verification failed");
+                break;
+            default:
+                strcpy(buf, "package install result:Update.zip is not correct:Undefine");
+                break;
+            }
+    }
+	fputs(buf,status);
+	if(kind_of_update==FOTA_FULL){
+        char buf[100];
+        strcpy(buf, "\npackage install kind:full package");
+        fputs(buf,status);
+	}
+	fflush(status);
+       if (ferror(status)) LOGE("Error in %s\n(%s)\n", file_name, strerror(errno));
+       fclose(status);
+ 
+    chmod(file_name, 0666);
+    chown(file_name, 1000, 1000);   // system user
+    ////added by xuanfeng.ye for Task3615106 begin end
 
   }
   else {  /* NAND */
@@ -975,10 +1014,15 @@
 int mt_main_write_result(int &status, const char *update_package)
 {
       if (update_package) {
-          if ((status == INSTALL_SUCCESS) && update_package) {
+          //modified by xuanfeng.ye for Task3615106
+          /*if ((status == INSTALL_SUCCESS) && update_package) {
               fprintf(stdout, "write result : remove_mota_file\n");
               remove_mota_file(update_package);
-          }
+          }*/
+     //added by xuanfeng.ye for Task3615106 begin
+      fprintf(stdout, "write result : JRDFOTA_RESULT_FILE\n");
+	    write_result_file(JRDFOTA_RESULT_FILE, status);
+	   //added by xuanfeng.ye for Task3615106 end
           write_result_file(MOTA_RESULT_FILE, status);
       }
   return 0;
Index: bootable/recovery/install.cpp
===================================================================
--- bootable/recovery/install.cpp	(revision 2550)
+++ bootable/recovery/install.cpp	(revision 2551)
@@ -62,6 +62,10 @@
 static constexpr const char* AB_OTA_PAYLOAD = "payload.bin";
 #define PUBLIC_KEYS_FILE "/res/keys"
 static constexpr const char* METADATA_PATH = "META-INF/com/android/metadata";
+//added by xuanfeng.ye for Task3615106 begin
+#define SCRIPT_NAME "META-INF/com/google/android/updater-script"
+static char *fota_incr_comment = "# ---- start making changes here ----";
+//added by xuanfeng.ye for Task3615106 end
 static constexpr const char* UNCRYPT_STATUS = "/cache/recovery/uncrypt_status";
 
 // Default allocation of progress bar segments to operations
@@ -456,6 +460,8 @@
     return INSTALL_SUCCESS;
 }
 
+extern int kind_of_update; //added by xuanfeng.ye for Task3615106
+
 static int
 really_install_package(const char *path, bool* wipe_cache, bool needs_mount,
                        std::vector<std::string>& log_buffer, int retry_count)
@@ -540,7 +546,38 @@
         sysReleaseMap(&map);
         return INSTALL_CORRUPT;
     }
+    //added by xuanfeng.ye for Task3615106 begin
+    {
+    const ZipEntry* script_entry = mzFindZipEntry(&zip, SCRIPT_NAME);
+    if (script_entry == NULL) {
+        fprintf(stderr, "Can't find %s\n", SCRIPT_NAME);
+         
+    }
+    int k=0;
+    char* script = (char *)malloc(script_entry->uncompLen+1);
+    if (!mzReadZipEntry(&zip, script_entry, script, script_entry->uncompLen)) {
+        fprintf(stderr, "Can't read %s\n", SCRIPT_NAME);
+        
+    }
+    script[script_entry->uncompLen] = '\0';
 
+    char* p;
+    for (p = script; *p != '\0'; p++) {
+        if (*p == '#') {
+            if (strcmp(p, fota_incr_comment) >= 0) {
+                k = FOTA_INCR;
+                break;
+            }
+        }
+    }
+
+    // not find incremental ota comment, it's full ota
+    if (*p == '\0')
+        k = FOTA_FULL;
+    free(script);
+    kind_of_update = k;
+    }
+    //added by xuanfeng.ye for Task3615106 end
     int ret=INSTALL_SUCCESS;
     if (mt_really_install_package(ret, path, needs_mount, &zip, &map)) {
         sysReleaseMap(&map);
Index: bootable/recovery/install.h
===================================================================
--- bootable/recovery/install.h	(revision 2550)
+++ bootable/recovery/install.h	(revision 2551)
@@ -27,6 +27,14 @@
 #include "common.h"
 #include "minzip/Zip.h"
 
+//added by xuanfeng.ye for Task3615106 begin
+enum
+{
+    FOTA_UN,
+    FOTA_INCR,
+    FOTA_FULL,
+};
+//added by xuanfeng.ye for Task3615106 end
 #if 0
 enum { INSTALL_SUCCESS, INSTALL_ERROR, INSTALL_CORRUPT, INSTALL_NONE, INSTALL_SKIPPED,
         INSTALL_RETRY };
