Index: vendor/mediatek/proprietary/packages/apps/FactoryMode/src/com/mediatek/factorymode/FactoryModeBootCompleteServer.java
===================================================================
--- vendor/mediatek/proprietary/packages/apps/FactoryMode/src/com/mediatek/factorymode/FactoryModeBootCompleteServer.java	(revision 1066)
+++ vendor/mediatek/proprietary/packages/apps/FactoryMode/src/com/mediatek/factorymode/FactoryModeBootCompleteServer.java	(revision 1067)
@@ -23,7 +23,8 @@
 
 public class FactoryModeBootCompleteServer extends Service {
     private final static String TAG = "FactoryModeBootCompleteServer";
-	private static final int PRODUCT_INFO_NVRAM_LID = 59;
+    private static final String PRODUCT_INFO_NVRAM_PATH = "/data/nvram/APCFG/APRDEB/PRODUCT_INFO";
+	//private static final int PRODUCT_INFO_NVRAM_LID = 59;
 	private static final int SWR_INFO_NV_POS = 600; 
     private String SWR_INFO_STRING = "ro.build.swr.id"; 
     private static final int BT_NVRAM_ID = 1;
@@ -65,7 +66,7 @@
         NvRAMAgent agent = NvRAMAgent.Stub.asInterface(binder);
 
         try{
-            mProductInfoBuff = agent.readFile(PRODUCT_INFO_NVRAM_LID);
+            mProductInfoBuff = agent.readFileByName(PRODUCT_INFO_NVRAM_PATH);
         }catch(Exception e){
             e.printStackTrace();
         }        
@@ -140,7 +141,7 @@
         }
         
     }
-
+    /*
     private void setSWRInfoToNV(){
         if(mProductInfoBuff == null){
             Log.d(TAG, "===mProductInfoBuff == null=");
@@ -152,7 +153,7 @@
  
         Log.d(TAG, "===setSWRInfoToNV  buff[SWR_INFO_NV_POS]="+mProductInfoBuff[SWR_INFO_NV_POS]);
         
-        if(/*mProductInfoBuff[SWR_INFO_NV_POS] == (byte)0*/true){
+        if(mProductInfoBuff[SWR_INFO_NV_POS] == (byte)0){
             String swrInfo = SystemProperties.get(SWR_INFO_STRING, "unknow");
             String swrInfoEx = "SWR:"+swrInfo+"End";        
             byte[] swrByte = swrInfoEx.getBytes(); 
@@ -175,5 +176,6 @@
         }
         
     }
+    */
 
 }
